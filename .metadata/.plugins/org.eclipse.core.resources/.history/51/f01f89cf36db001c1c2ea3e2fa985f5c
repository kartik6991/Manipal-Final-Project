package com.example.demo.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo.entities.AddtoCategoryDTO;
import com.example.demo.entities.Category;
import com.example.demo.entities.Mobile;
import com.example.demo.exception.CategoryException;
import com.example.demo.exception.MobileException;
import com.example.demo.repository.ICategoryRepository;
import com.example.demo.repository.IMobileRepository;

@Service
public class CategoryServiceImpl implements ICategoryService {
	@Autowired
	private ICategoryRepository categoryRepo;
	@Autowired
	private IMobileRepository mobileRepo;

	@Override
	public List<Category> getAllCategory() {
		return categoryRepo.findAll();
	}

	@Override
	public Category addCategory(Category category) throws CategoryException {
		Optional<Category> newCategory = this.categoryRepo.findByCategoryName(category.getCategoryName());
		if (newCategory.isPresent())
			throw new CategoryException("Already category added");
		return this.categoryRepo.save(category);
	}

	@Override
	public Category updateCategory(Category category) {
		return this.categoryRepo.save(category);
	}

	@Override
	public String deleteCategory(String categoryName) {
		this.categoryRepo.deleteByCategoryName(categoryName);
		return "Category deleted successfully";
	}
	
	public Category addToCategory(AddtoCategoryDTO addcatDTO) throws MobileException, CategoryException {
		Optional<Mobile>mobileOpt=this.mobileRepo.findById(addcatDTO.getMobileId());
		if(mobileOpt.isEmpty())
			throw new MobileException("Mobile Id doesn't exist");
		Mobile mob = mobileOpt.get();
		Optional<Category>categoryOpt=this.categoryRepo.findByCategoryName(addcatDTO.getCategoryName());
		if(categoryOpt.isEmpty())
			throw new CategoryException("Category name doesn't exist");
		return null;
	}
}
